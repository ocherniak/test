---
apiVersion: v1
kind: Service
metadata:
  name: cassandra
  labels:
    app: cassandra
    tier: persistence
spec:
  ports:
    # the port that this service should serve on
  - port: 9042
    targetPort: 9042
    protocol: TCP
  selector:
    app: cassandra
    tier: persistence
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: cassandra
  namespace: default
spec:
  serviceName: cassandra
  replicas: 1
  template:
    metadata:
      labels:
        app: cassandra
        tier: persistence
    spec:
      containers:
      - name: cassandra
        image: cassandra:3.9
        terminationMessagePolicy: FallbackToLogsOnError
        livenessProbe:
          tcpSocket:
            port: clients-port
          initialDelaySeconds: 240
          periodSeconds: 5
        readinessProbe:
          tcpSocket:
            port: clients-port
          initialDelaySeconds: 1
          periodSeconds: 1
        resources:
          requests:
            memory: 500Mi
          limits:
            memory: 1500Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
        - name: MAX_HEAP_SIZE
          value: 1G
        - name: HEAP_NEWSIZE
          value: 250M
        ports:
        - name: clients-port
          containerPort: 9042
        # These volume mounts are persistent. They are like inline claims,
        # but not exactly because the names need to match exactly one of
        # the stateful pod volumes.
        volumeMounts:
        - name: cassandra-data
          mountPath: /var/lib/cassandra
  # These are converted to volume claims by the controller
  # and mounted at the paths mentioned above.
  # do not use these in production until ssd GCEPersistentDisk or other ssd pd
  volumeClaimTemplates:
  - metadata:
      name: cassandra-data
      annotations:
        volume.beta.kubernetes.io/storage-class: "cassandra-pv"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 100Gi
